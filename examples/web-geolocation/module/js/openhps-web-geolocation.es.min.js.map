{"version":3,"file":"web/openhps-web-geolocation.es.min.js","mappings":"2CACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,0CCElF,MAAM,EAFEI,KAAO,IAAIC,EAAI,CAAC,EAAgC,OAA7Bf,EAAoBgB,EAAED,EAAGD,GAAWC,CAAC,EAE3BA,CAAE,CAAE,WAAgB,IAAME,EAA6DC,WAAY,UAAe,IAAMD,EAA6DE,UAAW,UAAe,IAAMF,EAA6DG,UAAW,WAAgB,IAAMH,EAA6DI,WAAY,qBAA0B,IAAMJ,EAA6DK,qBAAsB,WAAgB,IAAML,EAA6DM,WAAY,eAAoB,IAAMN,EAA6DO,eAAgB,YAAiB,IAAMP,EAA6DQ,YAAa,WAAgB,IAAMR,EAA6DS,aCEv4B,MAAMC,8BAA8B,EAAAD,WACvCE,YAAYC,GACR,IAAIC,EACJC,MAAMF,GACNG,KAAKH,QAAQI,SAAWD,KAAKH,QAAQI,UAAY,IAC7CD,KAAKH,QAAQK,WACbF,KAAKG,KAAK,QAASH,KAAKI,MAAMC,KAAKL,OAEvCA,KAAKH,QAAQS,OAAgC,QAAtBR,EAAKE,KAAKM,cAA2B,IAAPR,EAAgBA,EAAK,IAAI,EAAAT,UAClF,CACAe,QACI,OAAO,IAAIG,SAAQ,CAACC,EAASC,KACzBT,KAAKU,YAAcC,UAAUD,YAC7BV,KAAKU,YAAYE,eAAeC,IAC5B,MAAMC,EAASd,KAAKe,iBAAiBF,GACrCb,KAAKM,OAAOU,YAAYF,GACxBd,KAAKiB,KAAK,IAAI,EAAA7B,UAAUY,KAAKM,QAAQ,IACrCY,IACAlB,KAAKmB,OAAO,QAAS,wCAAyCD,GAC9DT,EAAOS,EAAM,GACd,CACCE,WAAYpB,KAAKH,QAAQI,SACzBoB,QAASrB,KAAKH,QAAQwB,QACtBC,oBAAoB,IAExBd,GAAS,GAEjB,CACAO,iBAAiBF,GACb,MAAMC,EAAS,IAAI,EAAAxB,qBAgBnB,OAfAwB,EAAOS,SAAW,IAAI,EAAArC,WAAW2B,EAASW,OAAOD,SAAUV,EAASW,OAAOC,iBAAkB,EAAAlC,WAAA,OAC7FuB,EAAOY,SAAWb,EAASW,OAAOE,SAClCZ,EAAOa,SAAWd,EAASW,OAAOG,SAClCb,EAAOc,UAAYf,EAASW,OAAOI,UAC/Bf,EAASW,OAAOK,QAChBf,EAAOgB,eAAiB,IAAI,EAAAtC,eAAeqB,EAASW,OAAOK,QAE3DhB,EAASW,OAAOO,UAChBjB,EAAOkB,YAAc,EAAAvC,YAAA,UAAsB,CACvCwC,IAAKpB,EAASW,OAAOO,QACrBG,MAAO,EACPC,KAAM,EACNC,KAAM,EAAAjD,UAAA,UAGP2B,CACX,CACAuB,OACI,OAAO,IAAI9B,SAASC,IAChBR,KAAKU,YAAY4B,WAAWtC,KAAKuC,UACjC/B,GAAS,GAEjB,CACAgC,SACI,OAAO,IAAIjC,SAAQ,CAACC,EAASC,KACzBT,KAAKU,YAAY+B,oBAAoB5B,IACjC,MAAMC,EAASd,KAAKe,iBAAiBF,GACrCb,KAAKM,OAAOU,YAAYF,GACxBN,EAAQ,IAAI,EAAApB,UAAUY,KAAKM,QAAQ,IACnCY,GAAUT,EAAOS,IAAQ,CACzBI,oBAAoB,EACpBD,QAASrB,KAAKH,QAAQwB,QACtBD,WAAYpB,KAAKH,QAAQwB,SAC3B,GAEV,E","sources":["webpack://@openhps/web-geolocation/webpack/bootstrap","webpack://@openhps/web-geolocation/webpack/runtime/define property getters","webpack://@openhps/web-geolocation/webpack/runtime/hasOwnProperty shorthand","webpack://@openhps/web-geolocation/external module \"./openhps-core.es.min.js\"","webpack://@openhps/web-geolocation/./dist/esm/GeolocationSourceNode.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"Accuracy2D\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Accuracy2D, [\"AngleUnit\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.AngleUnit, [\"DataFrame\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.DataFrame, [\"DataObject\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.DataObject, [\"GeographicalPosition\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.GeographicalPosition, [\"LengthUnit\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.LengthUnit, [\"LinearVelocity\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.LinearVelocity, [\"Orientation\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Orientation, [\"SourceNode\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.SourceNode });","import { DataFrame, SourceNode, GeographicalPosition, LinearVelocity, Orientation, AngleUnit, Accuracy2D, LengthUnit, DataObject, } from '@openhps/core';\r\n/**\r\n * Geolocation source node\r\n */\r\nexport class GeolocationSourceNode extends SourceNode {\r\n    constructor(options) {\r\n        var _a;\r\n        super(options);\r\n        this.options.interval = this.options.interval || 1000;\r\n        if (this.options.autoStart) {\r\n            this.once('build', this.start.bind(this));\r\n        }\r\n        this.options.source = (_a = this.source) !== null && _a !== void 0 ? _a : new DataObject();\r\n    }\r\n    start() {\r\n        return new Promise((resolve, reject) => {\r\n            this.geolocation = navigator.geolocation;\r\n            this.geolocation.watchPosition((position) => {\r\n                const geoPos = this._convertPosition(position);\r\n                this.source.setPosition(geoPos);\r\n                this.push(new DataFrame(this.source));\r\n            }, (error) => {\r\n                this.logger('error', 'Unable to watch for position changes!', error);\r\n                reject(error);\r\n            }, {\r\n                maximumAge: this.options.interval,\r\n                timeout: this.options.timeout,\r\n                enableHighAccuracy: true,\r\n            });\r\n            resolve();\r\n        });\r\n    }\r\n    _convertPosition(position) {\r\n        const geoPos = new GeographicalPosition();\r\n        geoPos.accuracy = new Accuracy2D(position.coords.accuracy, position.coords.altitudeAccuracy, LengthUnit.METER);\r\n        geoPos.altitude = position.coords.altitude;\r\n        geoPos.latitude = position.coords.latitude;\r\n        geoPos.longitude = position.coords.longitude;\r\n        if (position.coords.speed) {\r\n            geoPos.linearVelocity = new LinearVelocity(position.coords.speed);\r\n        }\r\n        if (position.coords.heading) {\r\n            geoPos.orientation = Orientation.fromEuler({\r\n                yaw: position.coords.heading,\r\n                pitch: 0,\r\n                roll: 0,\r\n                unit: AngleUnit.DEGREE,\r\n            });\r\n        }\r\n        return geoPos;\r\n    }\r\n    stop() {\r\n        return new Promise((resolve) => {\r\n            this.geolocation.clearWatch(this._watchId);\r\n            resolve();\r\n        });\r\n    }\r\n    onPull() {\r\n        return new Promise((resolve, reject) => {\r\n            this.geolocation.getCurrentPosition((position) => {\r\n                const geoPos = this._convertPosition(position);\r\n                this.source.setPosition(geoPos);\r\n                resolve(new DataFrame(this.source));\r\n            }, (error) => reject(error), {\r\n                enableHighAccuracy: true,\r\n                timeout: this.options.timeout,\r\n                maximumAge: this.options.timeout,\r\n            });\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=GeolocationSourceNode.js.map"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__","Accuracy2D","AngleUnit","DataFrame","DataObject","GeographicalPosition","LengthUnit","LinearVelocity","Orientation","SourceNode","GeolocationSourceNode","constructor","options","_a","super","this","interval","autoStart","once","start","bind","source","Promise","resolve","reject","geolocation","navigator","watchPosition","position","geoPos","_convertPosition","setPosition","push","error","logger","maximumAge","timeout","enableHighAccuracy","accuracy","coords","altitudeAccuracy","altitude","latitude","longitude","speed","linearVelocity","heading","orientation","yaw","pitch","roll","unit","stop","clearWatch","_watchId","onPull","getCurrentPosition"],"sourceRoot":""}