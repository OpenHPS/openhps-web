!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("@openhps/core")):"function"==typeof define&&define.amd?define("OpenHPS",["core"],t):"object"==typeof exports?exports.OpenHPS=t(require("@openhps/core")):(e.OpenHPS=e.OpenHPS||{},e.OpenHPS.sensors=t(e.OpenHPS.core))}("undefined"!=typeof self?self:this,(e=>(()=>{"use strict";var t={915:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});const o=r(230),n=r(401);e.exports="Accelerometer"in window?{SensorSourceNode:o.SensorSourceNode}:{SensorSourceNode:n.SensorSourceNode}},401:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SensorSourceNode=void 0;const o=r(0);class SensorSourceNode extends o.SourceNode{constructor(e){var t;super(e),this.options.source=null!==(t=this.options.source)&&void 0!==t?t:new o.DataObject(this.uid),this.options.autoStart&&this.once("build",this.start.bind(this)),this.once("destroy",this.stop.bind(this))}requestPermission(){return Promise.resolve()}start(){return new Promise((e=>{const t=this.source?this.source.uid:this.uid;window.addEventListener("devicemotion",(e=>{const r=new o.DataFrame,n=1e3/e.interval;r.addSensor(new o.Accelerometer(t+"_accl",new o.Acceleration(e.accelerationIncludingGravity.x,e.accelerationIncludingGravity.y,e.accelerationIncludingGravity.z),n)),r.addSensor(new o.Gyroscope(t+"_gyro",new o.AngularVelocity(e.rotationRate.beta,e.rotationRate.gamma,e.rotationRate.alpha),n)),r.addSensor(new o.Accelerometer(t+"_linearaccl",new o.Acceleration(e.acceleration.x,e.acceleration.y,e.acceleration.z),n));const s=this.source;s.getPosition().angularVelocity=r.getSensor(o.Gyroscope).value,r.addSensor(new o.AbsoluteOrientationSensor(t+"_orientation",s.getPosition().orientation)),r.source=s,this.push(r)}),!0),window.addEventListener("deviceorientation",(e=>{this.source.getPosition().orientation=o.Orientation.fromEuler([e.beta,e.gamma,e.alpha])})),this.logger("debug","Browser orientation and motion events registered!"),e()}))}stop(){return Promise.resolve()}onPull(){return new Promise((e=>{e(void 0)}))}}t.SensorSourceNode=SensorSourceNode},230:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SensorSourceNode=void 0;const o=r(0);class SensorSourceNode extends o.SourceNode{constructor(e){super(e),this._subscriptions=new Map,this._values=new Map,this._lastPush=0,this._running=!1,this.options.interval=this.options.interval||100,this.options.autoStart&&this.once("build",this.start.bind(this)),this.once("destroy",this.stop.bind(this))}requestPermission(){return new Promise(((e,t)=>{Promise.all(this.options.sensors.map((e=>this.getPermissions(e).map((e=>navigator.permissions.query({name:e}))))).reduce(((e,t)=>[...e,...t]))).then((r=>{r.every((e=>"granted"===e.state))?e():t(new Error("No permission to use the required sensors!"))})).catch(t)}))}start(){return new Promise((e=>{if(this._running=!0,this._subscriptions.size>0)return e();this.options.sensors.forEach((e=>{const t=this.findSensor(e),r=new t({frequency:Math.round(1e3/this.options.interval)});r.addEventListener("reading",(r=>{if(!this._running)return;const n=o.TimeService.now();this._values.set(e,Object.assign(Object.assign({},r.target),{timestamp:n})),console.log(t,Object.assign(Object.assign({},r.target),{timestamp:n}),this._isUpdated()),this._isUpdated()&&(this._lastPush=o.TimeService.now(),this.createFrame().catch((e=>{this.logger("error","Unable to create sensor data frame!",e)})))})),r.start(),this._subscriptions.set(e,r)})),e()}))}_isUpdated(){return Array.from(this._values.values()).filter((e=>e.timestamp>this._lastPush)).length===this.options.sensors.length}stop(){return new Promise((e=>{this.options.softStop?this._running=!1:(this._subscriptions.forEach((e=>e.stop())),this._subscriptions=new Map,this._values=new Map),e()}))}createFrame(){return new Promise((e=>{const t=new o.DataFrame;t.source=this.source;const r=this._values.get(o.Accelerometer),n=this._values.get(o.LinearAccelerationSensor),s=this._values.get(o.Gyroscope),i=this._values.get(o.AbsoluteOrientationSensor),a=this._values.get(o.RelativeOrientationSensor),c=this._values.get(o.Magnetometer),u=this.source?this.source.uid:this.uid,l=1e3/this.options.interval;r&&t.addSensor(new o.Accelerometer(u+"_accel",new o.Acceleration(r.x,r.y,r.z),l)),n&&t.addSensor(new o.LinearAccelerationSensor(u+"_linearaccel",new o.Acceleration(n.x,n.y,n.z),l)),s&&t.addSensor(new o.Gyroscope(u+"_gyro",new o.AngularVelocity(s.x,s.y,s.z,o.AngularVelocityUnit.RADIAN_PER_SECOND),l)),i&&t.addSensor(new o.AbsoluteOrientationSensor(u+"_absoluteorientation",o.Orientation.fromQuaternion(new o.Quaternion(...i.quaternion)),l)),a&&t.addSensor(new o.RelativeOrientationSensor(u+"_relativeorientation",o.Orientation.fromQuaternion(new o.Quaternion(...a.quaternion)),l)),c&&t.addSensor(new o.Magnetometer(u+"_mag",new o.Magnetism(c.x,c.y,c.z),l)),this.push(t),e()}))}onPull(){return new Promise((e=>{e(void 0)}))}findSensor(e){switch(e){case o.RelativeOrientationSensor:return RelativeOrientationSensor;case o.AbsoluteOrientationSensor:return AbsoluteOrientationSensor;case o.LinearAccelerationSensor:return LinearAccelerationSensor;case o.Gyroscope:return Gyroscope;case o.Magnetometer:return Magnetometer;case o.Accelerometer:return Accelerometer;default:return}}getPermissions(e){switch(e){case o.RelativeOrientationSensor:case o.AbsoluteOrientationSensor:return["gyroscope","accelerometer","magnetometer"];case o.Gyroscope:return["gyroscope"];case o.Magnetometer:return["magnetometer"];case o.LinearAccelerationSensor:case o.Accelerometer:return["accelerometer"];default:return}}}t.SensorSourceNode=SensorSourceNode},0:t=>{t.exports=e}},r={};var o=function e(o){var n=r[o];if(void 0!==n)return n.exports;var s=r[o]={exports:{}};return t[o](s,s.exports,e),s.exports}(915);return o})()));
//# sourceMappingURL=openhps-web-sensors.min.js.map